#!/usr/bin/env python

import os, sys
parent_folder = os.path.realpath(os.path.join(os.path.dirname(os.path.abspath(__file__)), '..'))
sys.path.append(os.path.join(parent_folder, 'nb_urn_client'))
import nb_urn_client
from optparse import OptionParser
default_config = os.path.join(parent_folder, 'config', 'config.yml')

parser = OptionParser()
parser.add_option("--urn", dest="urn", help="The URN on which to replace a URL")
parser.add_option("--url-old", dest="url_old", help="The old URL to replace with a new URL")
parser.add_option("--url-new", dest="url_new", help="The new URL")
parser.add_option("--username", dest="username", help="Username (if not provided by the config file)")
parser.add_option("--password", dest="password", help="Password (if not provided by the config file)")
parser.add_option("-c", "--config", dest="config", help="A YAML config file")
(options, args) = parser.parse_args()

if options.urn and options.url_old and options.url_new:
    c = nb_urn_client.NbUrnClient(
        username=options.username if options.username else None,
        password=options.password if options.password else None,
        config_file=options.config if options.config else default_config
    )

    print c.replace_url(options.urn, options.url_old, options.url_new)
else:
    sys.stderr.write("Usage: replace_url --urn URN --old-url URL --new-url URL\n")



